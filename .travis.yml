dist: trusty
language: cpp

branches:
  only:
  - master
  - develop

cache:
  # There is little benefit from ccache for testing a header-only library
  ccache: false

_common_sources: &common_sources
  - ubuntu-toolchain-r-test
  - llvm-toolchain-trusty-7

_common_packages: &common_packages
  - libboost1.58-dev
  - libeigen3-dev
  - libgtest-dev
  - clang-format-7

jobs:
  include:
    - name: "GCC 6"
      env: WAVE_CXX=g++-6 WAVE_CC=gcc-6
      addons:
        apt:
          sources:
            - sourceline: 'ppa:lkoppel/robotics'
            - sourceline: 'ppa:kzemek/boost'
            - *common_sources
          packages:
            - *common_packages
            - g++-6
    - name: "Clang 5"
      env: WAVE_CXX=clang++-5.0 WAVE_CC=clang-5.0
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-5.0
            - sourceline: 'ppa:lkoppel/robotics'
            - sourceline: 'ppa:kzemek/boost'
            - *common_sources
          packages:
            - *common_packages
            - g++-6
            - clang-5.0
    - name: "GCC 8 AddressSanitizer"
      env: WAVE_CXX=g++-8 WAVE_CC=gcc-8 \
        ASAN_OPTIONS=detect_leaks=0:strict_string_checks=1:detect_stack_use_after_return=1:check_initialization_order=1:strict_init_order=1 \
        WAVE_CXX_FLAGS="-fsanitize=address -fsanitize-address-use-after-scope -O1 -DNDEBUG -fno-omit-frame-pointer -ftrack-macro-expansion=0 -fuse-ld=gold -Wno-misleading-indentation" \
        WAVE_BUILD_TYPE=None
      addons:
        apt:
          sources:
            - sourceline: 'ppa:lkoppel/robotics'
            - sourceline: 'ppa:kzemek/boost'
            - *common_sources
          packages:
            - *common_packages
            - g++-8
            - binutils
    - stage: deploy
      name: "Docs"
      language: python
      python: "3.6"
      env: DOCS_BUILD_DIR=build_docs
      install:
        - pip install sphinx==1.7.9 sphinx_rtd_theme recommonmark sphinx-markdown-tables git+git://github.com/leokoppel/sphinxcontrib-versioning
      script:
        - ./scripts/ci/ci_make_docs.bash
      deploy:
        provider: pages
        strategy: git
        skip-cleanup: true
        github-token:
          secure: "EOLR86znU3Y8BoqI/cDYqAO4U0P2T4Xlobfh4F1GC9kyaeFvCcDIyKEtlhWxrxo3QhwCQPXE9HSXZDGfkLn1rWGAKltmYC7fteZbp39jmV7FTC+lL/JnS7499ojGRj0hSP7kmNwKyjkjJnDMHdx8xAyg3D1VmoCU27fyu8ayQrdMzbtarVndJ+Nnmro46cMlEIWEDdEIhIqJ8ffgHbZpMbONt79YnHgY1b+hKgtP8815K9g+UG2F7MYajRSJs7OZdw1XQpNNL0gEgEjHvsbq18OPqSRmb3cp5bgp912p9lKQLId/ATSoxoU0eoGYXSaIN3vcZSXrA91Go1UChWKULuKM1oTUqKJoJnCI1p6KyB5/dMoJv4AKblP/9t3pO1BK7ZPfS7plxWN982yfUVPL7BfnwpkuYNcHUmD4ukBqcrCuHshXO770v+C6KpgUVQWHEc4vpXWz+9goLd3U2VLsJKJ5LYffMLuzmdY4XpSdXwJKLQAunsrJ2m1JMNFqZUbxYpvnNsjw/To3jwsFsZdIHnY5yW6NSIu+WaAeQJ1j8oeuggAIyUW3IUAFPq30hYW1oiwNBuj8lHW9B52mrjLaMuSoleGkeIrRUDSedaDSVAYk9LKQibglCOag7QFArzNcdOjFnqcsIOUR7+yYGcLS3itA3aK6Fr7MXXwSvkK6vEQ="
        local-dir: $DOCS_BUILD_DIR
        on:
          all_branches: true  # branches limited by the below condition
          condition: $TRAVIS_BRANCH =~ ^master|develop$

before_script:
  - export CXX=$WAVE_CXX CC=$WAVE_CC  # override travis with what we set in matrix

script:
- ./scripts/ci/ci_check.bash
- ./scripts/ci/ci_run.bash

notifications:
  email: false
